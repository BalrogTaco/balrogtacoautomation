{"name":"Maneuvers: Bait and Switch","type":"feat","img":"icons/magic/perception/shadow-stealth-eyes-purple.webp","effects":[],"flags":{"ddbimporter":{"id":"2439086","entityTypeId":"222216831","componentId":1306902,"componentTypeId":258900837,"class":"Fighter","subclass":"Battle Master","importId":"28pyz8r4w0vt0973"},"infusions":{"infused":false},"obsidian":{"source":{"type":"class","text":"Fighter"}},"scene-packer":{"hash":"0252143b5203a6e39899a292c1d083d7658022ae","sourceId":"Item.e2rwzhaSa423KUbq"},"spellTemplateManager":{"stmData":{"ignoreDuration":false,"spellTexture":"","useTexture":false,"alpha":50,"coneOrigin":1,"loopAnimations":true}},"midi-qol":{"effectActivation":false,"onUseMacroName":"[preActiveEffects]ItemMacro"},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"rollOther":false,"critOther":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false,"ignoreTotalCover":false},"magicitems":{"enabled":false,"equipped":false,"attuned":false,"charges":"0","chargeType":"c1","destroy":false,"destroyFlavorText":"reaches 0 charges: it crumbles into ashes and is destroyed.","rechargeable":false,"recharge":"0","rechargeType":"t1","rechargeUnit":"r1","sorting":"l"},"favtab":{"isFavorite":true},"itemacro":{"macro":{"data":{"_id":null,"name":"Maneuvers: Bait and Switch","type":"script","author":"ldRsJ6Yp5qPydWA1","img":"icons/svg/dice-target.svg","scope":"global","command":"/*****\nFighter Battlemaster Maneuver: Bait and Switch\n\nUSEAGE : ACTIVATE ANYTIME\nThis is a utility Maneuver and can be used whenever your character can take an action.  \nThis will setup any bonuses and effects on the TARGET actor.  \nA Superiority Die will be expended immediately.\n\nv1.2 May 7 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \n*****/\n\n// Activate on preActiveEffects\nif (args[0].macroPass === \"preActiveEffects\") {\n\n    // define Actor, Target and Workflow\n    const pcActor = MidiQOL.MQfromActorUuid(args[0].actorUuid);\n    const targetActor = args[0].targets[0].actor;\n    let pcToken = token;\n    let targetToken = await fromUuid(args[0].hitTargetUuids[0]);\n    const workflow = MidiQOL.Workflow.getWorkflow(args[0].uuid);\n\n    // check to make sure only one target is selected\n    if ((args[0].targetUuids.length < 1) || (args[0].targetUuids.length > 1)) {\n        ui.notifications.error(\"You need to select a single target.\");\n        await incrementResource(pcActor, \"Superiority Dice\", 1);\n        return;\n    }\n\n    // check to make sure target is not incapacitated\n    if (!(targetActor.data.data.attributes.hp.value > 0)) {\n        ui.notifications.error(\"Your target must be conscious!\");\n        await incrementResource(pcActor, \"Superiority Dice\", 1);\n        return;\n    }\n\n    let superiorityDie = pcActor.getFlag(\"dae\", \"SuperiorityDie\");\n    if (superiorityDie === null) {\n        ui.notifications.error(\"You are not a fighter battlemaster of at least level 3!\");\n        await incrementResource(pcActor, \"Superiority Dice\", 1);\n        return;\n    }\n\n    // Roll superiority die for AC Bonus result\n    const acBonusRoll = await(new Roll(`${superiorityDie}`)).roll();\n\n    //prompt for who gets the AC bonus\n    let dialog = new Promise((resolve, reject) => {\n        new Dialog({\n            // localize this text\n            title: \"Battle Master: Bait and Switch\",\n            content: \"<p>Who gets the AC bonus for 1 turn You or Target?</p>\",\n            buttons: {\n                one: {\n                    icon: '<p> </p><img src = \"systems/dnd5e/icons/skills/water_09.jpg\" width=\"60\" height=\"60\"></>',\n                    label: \"<p>You</p>\",\n                    callback: () => resolve(\"YOU\")\n                },\n                two: {\n                    icon: '<p> </p><img src = \"systems/dnd5e/icons/skills/shadow_19.jpg\" width=\"60\" height=\"60\"></>',\n                    label: \"<p>Target</p>\",\n                    callback: () => { resolve(\"TARGET\") }\n                }\n            },\n            default: \"two\"\n        }).render(true);\n    });\n\n    let choiceACBonus = await dialog;\n\n    if (choiceACBonus === \"YOU\") {\n        // Set Actor Active Effect for AC bonus\n        await pcActor.createEmbeddedDocuments(\"ActiveEffect\", [{\n            \"changes\": [{ \"key\": \"data.attributes.ac.bonus\", \"mode\": 2, \"value\": `${acBonusRoll.total}`, \"priority\": \"20\" }],\n            \"label\": \"Bait and Switch AC Bonus\",\n            \"duration\": { seconds: 0, rounds: 0, turns: 1 },\n            \"origin\": args[0].itemUuid,\n            \"icon\": \"systems/dnd5e/icons/skills/gray_10.jpg\",\n        }]);\n    } else {\n        // Set Target Active Effect for AC bonus\n        await targetActor.createEmbeddedDocuments(\"ActiveEffect\", [{\n            \"changes\": [{ \"key\": \"data.attributes.ac.bonus\", \"mode\": 2, \"value\": `${acBonusRoll.total}`, \"priority\": \"20\" }],\n            \"label\": \"Bait and Switch AC Bonus\",\n            \"duration\": { seconds: 0, rounds: 0, turns: 1 },\n            \"origin\": args[0].itemUuid,\n            \"icon\": \"systems/dnd5e/icons/skills/gray_10.jpg\",\n        }]);\n    }\n\n    // Swap the token positions positions on the canvas\n    await SwapTokens(pcToken, targetToken, canvas);\n}\nreturn;\n\n//---------------------------------- MY FUNCTIONS -------------------------------------------\n\nasync function SwapTokens(pcMoveToken, targetMoveToken, thisCanvas) {\n    let targetCenter = targetMoveToken.object.center;\n    let pcCenter = pcMoveToken.center;\n    let snappedPosition = null;\n\n    thisCanvas.grid.diagonalRule = \"EUCL\";\n    const diagonalRule = canvas.grid.diagonRule;\n\n    // Move Actor to OLD Target Location\n    let travelRay = new Ray(pcCenter, targetCenter); //  create a ray to measure the angle to travel\n    let angle = travelRay.angle;\n    travelRay = Ray.fromAngle(pcMoveToken.data.x, pcMoveToken.data.y, angle, travelRay.distance);\n    snappedPosition = canvas.grid.getSnappedPosition(travelRay.B.x, travelRay.B.y);\n    canvas.grid.diagonalRule = diagonalRule;\n    await pcMoveToken.document.update(canvas.grid.getSnappedPosition(travelRay.B.x, travelRay.B.y));\n\n    // Move Target to OLD Actor Location\n    travelRay = new Ray(targetCenter, pcCenter); //  create a ray to measure the angle to travel\n    angle = travelRay.angle;\n    travelRay = Ray.fromAngle(targetMoveToken.data.x, targetMoveToken.data.y, angle, travelRay.distance);\n    snappedPosition = canvas.grid.getSnappedPosition(travelRay.B.x, travelRay.B.y);\n    canvas.grid.diagonalRule = diagonalRule;\n    await targetMoveToken.data.document.update(canvas.grid.getSnappedPosition(travelRay.B.x, travelRay.B.y));\n\n    return;\n}\n\n// Increment available resource\nasync function incrementResource(testActor, resourceName, numValue) {\n    let actorDup = duplicate(testActor);\n    let resources = Object.values(actorDup.data.resources);\n    let foundResource = resources.find(i => i.label.toLowerCase() === resourceName.toLowerCase());\n    if (foundrResource) {\n        foundResource.value = foundResource.value + numValue;\n        await testActor.update(actorDup);\n    } else ui.notifications.error(\"You have not setup a Superiority Dice resource.\");\n    return;\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}},"name":"Maneuvers: Bait and Switch","type":"script","scope":"global","command":"// Activate on preActiveEffects\nif (args[0].macroPass === \"preActiveEffects\") {\n\n    // define Actor, Target and Workflow\n    const pcActor = MidiQOL.MQfromActorUuid(args[0].actorUuid);\n    const targetActor = args[0].targets[0].actor;\n    let pcToken = token;\n    let targetToken = await fromUuid(args[0].hitTargetUuids[0]);\n    const workflow = MidiQOL.Workflow.getWorkflow(args[0].uuid);\n\n    console.log(pcActor);\n    console.log(targetActor);\n\n    // check to make sure only one target is selected\n    if ((args[0].targetUuids.length < 1) || (args[0].targetUuids.length > 1)) {\n        ui.notifications.error(\"You need to select a single target.\");\n        await incrementResource(pcActor, \"Superiority Dice\", 1);\n        return;\n    }\n\n    // check to make sure target is not incapacitated\n    if (!(targetActor.system.attributes.hp.value > 0)) {\n        ui.notifications.error(\"Your target must be conscious!\");\n        await incrementResource(pcActor, \"Superiority Dice\", 1);\n        return;\n    }\n\n    let superiorityDie = pcActor.getFlag(\"dae\", \"SuperiorityDie\");\n    if (superiorityDie === null) {\n        ui.notifications.error(\"You are not a fighter battlemaster of at least level 3!\");\n        await incrementResource(pcActor, \"Superiority Dice\", 1);\n        return;\n    }\n\n    // Roll superiority die for AC Bonus result\n    /*\n    const acBonusRoll = await(new Roll(`${superiorityDie}`)).roll({ async: true });\n     */\n\n    //prompt for who gets the AC bonus\n    let dialog = new Promise((resolve, reject) => {\n        new Dialog({\n            // localize this text\n            title: \"Battle Master: Bait and Switch\",\n            content: \"<p>Who gets the AC bonus for 1 turn You or Target?</p>\",\n            buttons: {\n                one: {\n                    icon: '<p> </p><img src = \"' + pcToken.document.texture.src + '\" width=\"60\" height=\"60\"></>',\n                    label: \"<p>You</p>\",\n                    callback: () => resolve(\"YOU\")\n                },\n                two: {\n                    icon: '<p> </p><img src = \"' + targetToken.texture.src + '\" width=\"60\" height=\"60\"></>',\n                    label: \"<p>Target</p>\",\n                    callback: () => { resolve(\"TARGET\") }\n                }\n            },\n            default: \"two\"\n        }).render(true);\n    });\n\n    let choiceACBonus = await dialog;\n\n    // Roll superiority die for AC Bonus result\n    const acBonusRoll = await(new Roll(`${superiorityDie}`)).roll({ async: true });\n    let chatOptions = {\n        type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n        rolls: [acBonusRoll],\n        rollMode: game.settings.get(\"core\", \"rollMode\"),\n        content: 'My HTML Content'\n        };\n        ChatMessage.create(chatOptions);\n\n    if (choiceACBonus === \"YOU\") {\n        // Set Actor Active Effect for AC bonus\n        await pcActor.createEmbeddedDocuments(\"ActiveEffect\", [{\n            \"changes\": [{ \"key\": \"system.attributes.ac.bonus\", \"mode\": 2, \"value\": `${acBonusRoll.total}`, \"priority\": \"20\" }],\n            \"label\": \"Bait and Switch AC Bonus\",\n            \"duration\": { seconds: 60, rounds: 0, turns: 0 },\n            \"origin\": args[0].itemUuid,\n            \"icon\": \"icons/magic/perception/shadow-stealth-eyes-purple.webp\",\n            \"flags\": {\"dae\": { \"specialDuration\": ['turnStartSource'] } },\n        }]);\n    } else {\n        // Set Target Active Effect for AC bonus\n        await targetActor.createEmbeddedDocuments(\"ActiveEffect\", [{\n            \"changes\": [{ \"key\": \"system.attributes.ac.bonus\", \"mode\": 2, \"value\": `${acBonusRoll.total}`, \"priority\": \"20\" }],\n            \"label\": \"Bait and Switch AC Bonus\",\n            \"duration\": { seconds: 60, rounds: 0, turns: 0 },\n            \"origin\": args[0].itemUuid,\n            \"icon\": \"icons/magic/perception/shadow-stealth-eyes-purple.webp\",\n            \"flags\": {\"dae\": { \"specialDuration\": ['turnStartSource'] } },\n        }]);\n    }\n\n    // Swap the token positions positions on the canvas\n    await SwapTokens(pcToken, targetToken, canvas);\n}\nreturn;\n\n//---------------------------------- MY FUNCTIONS -------------------------------------------\n\nasync function SwapTokens(pcMoveToken, targetMoveToken, thisCanvas) {\n    let targetCenter = targetMoveToken.object.center;\n    let pcCenter = pcMoveToken.center;\n    let snappedPosition = null;\n\n    thisCanvas.grid.diagonalRule = \"EUCL\";\n    const diagonalRule = canvas.grid.diagonRule;\n\n    // Move Actor to OLD Target Location\n    let travelRay = new Ray(pcCenter, targetCenter); //  create a ray to measure the angle to travel\n    let angle = travelRay.angle;\n    travelRay = Ray.fromAngle(pcMoveToken.x, pcMoveToken.y, angle, travelRay.distance);\n    snappedPosition = canvas.grid.getSnappedPosition(travelRay.B.x, travelRay.B.y);\n    canvas.grid.diagonalRule = diagonalRule;\n    await pcMoveToken.document.update(canvas.grid.getSnappedPosition(travelRay.B.x, travelRay.B.y));\n\n    // Move Target to OLD Actor Location\n    travelRay = new Ray(targetCenter, pcCenter); //  create a ray to measure the angle to travel\n    angle = travelRay.angle;\n    travelRay = Ray.fromAngle(targetMoveToken.x, targetMoveToken.y, angle, travelRay.distance);\n    snappedPosition = canvas.grid.getSnappedPosition(travelRay.B.x, travelRay.B.y);\n    canvas.grid.diagonalRule = diagonalRule;\n    await targetMoveToken.update(canvas.grid.getSnappedPosition(travelRay.B.x, travelRay.B.y));\n\n    return;\n}\n\n// Increment available resource\nasync function incrementResource(testActor, resourceName, numValue) {\n    let actorDup = testActor.toObject();\n    let resources = Object.values(actorDup.system.resources);\n    let foundResource = resources.find(i => i.label.toLowerCase() === resourceName.toLowerCase());\n    if (foundrResource) {\n        foundResource.value = foundResource.value + numValue;\n        await testActor.update(actorDup);\n    } else ui.notifications.error(\"You have not setup a Superiority Dice resource.\");\n    return;\n}","author":"P5SMTbn5XK4Pt7QJ","_id":null,"img":"icons/svg/dice-target.svg","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}},"core":{"sourceId":"Item.QCt9G1ryLky9enrK"},"cf":null,"exportSource":{"world":"test","system":"dnd5e","coreVersion":"9.269","systemVersion":"1.6.1"}},"system":{"description":{"value":"<p data-content-chunk-id=\"ea1fee30-2970-4771-9e19-721665eca895\">[PLACE YOUR DESCRIPTION HERE]</p>\n<p> </p>\n<details>\n<summary><strong>USAGE: </strong> <span style=\"color:#169179\">ACTIVATE ANYTIME</span></summary>\n<p>This is a utility Maneuver and can be used whenever your character can take an action.  This will set up any bonuses and effects on the TARGET actor.  A <span style=\"text-decoration:underline;color:#236fa1\">Superiority Die </span>will be expended immediately.</p>\n</details>\n<p> </p>\n<details>\n<summary><strong>SETUP:</strong></summary>\n<p>Please remember to link the use of this ability to a character sheet resource under the item details Resource Consumption dropdown.</p>\n<img src=\"https://user-images.githubusercontent.com/76136571/161775726-fb67bb97-5fd1-45c5-8301-bbb17e2d0f1d.png\" width=\"569\" /></details>\n<p> </p>\n<details>\n<summary><strong>VERSION INFO</strong></summary>\n<p>v1.2 May 7 2022</p>\n<p>jbowens #0415 (Discord)</p>\n<p>https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git</p>\n</details>","chat":"","unidentified":""},"source":"TCoE p42","activation":{"type":"special","cost":1,"condition":""},"duration":{"value":null,"units":""},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":""},"uses":{"value":null,"max":"","per":"","recovery":""},"consume":{"type":"attribute","target":"resources.primary.value","amount":1},"ability":"","actionType":"other","attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"requirements":"Fighter: Battlemaster","recharge":{"value":null,"charged":false},"attunement":0},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1668953691600,"modifiedTime":1668963351828,"lastModifiedBy":"P5SMTbn5XK4Pt7QJ"},"folder":null,"sort":0,"ownership":{"default":0,"P5SMTbn5XK4Pt7QJ":3},"_id":"FTvQPhrizSgaxglw"}
{"name":"Maneuvers: Precision Attack","type":"feat","img":"icons/skills/melee/strike-sword-steel-yellow.webp","effects":[{"_id":"og6qejg1f0p7b8ws","changes":[{"key":"flags.midi-qol.onUseMacroName","mode":0,"value":"ItemMacro.Maneuvers: Precision Attack,preCheckHits","priority":1}],"disabled":false,"duration":{"startTime":null,"seconds":null,"combat":null,"rounds":null,"turns":null,"startRound":null,"startTurn":null},"icon":"icons/skills/melee/strike-sword-steel-yellow.webp","label":"Maneuvers: Precision Attack","origin":"Actor.67GUmdTadYmGXD8W.Item.RryNpmf0SaXo2jua","transfer":true,"flags":{"core":{"statusId":""},"dae":{"stackable":"none","durationExpression":"","macroRepeat":"none","specialDuration":[],"transfer":true,"selfTarget":false,"selfTargetAlways":false},"ActiveAuras":{"isAura":false,"aura":"None","radius":null,"alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"displayTemp":false,"hostile":false,"onlyOnce":false}},"tint":null}],"flags":{"ddbimporter":{"id":"53565","entityTypeId":"222216831","componentId":17,"componentTypeId":258900837,"class":"Fighter","subclass":"Battle Master","importId":"28pyz8r4w0vt0973"},"infusions":{"infused":false},"obsidian":{"source":{"type":"class","text":"Fighter"}},"scene-packer":{"hash":"bbbf69e0d31acc1da5db1f8561a179bd9d62bc06","sourceId":"Item.lJsVElwBNGj9xuB1"},"spellTemplateManager":{"stmData":{"ignoreDuration":false,"spellTexture":"","useTexture":false,"alpha":50,"coneOrigin":1,"loopAnimations":true}},"midi-qol":{"effectActivation":false},"midiProperties":{"nodam":false,"fulldam":false,"halfdam":false,"rollOther":false,"critOther":false,"magicdam":false,"magiceffect":false,"concentration":false,"toggleEffect":false,"ignoreTotalCover":false},"magicitems":{"enabled":false,"equipped":false,"attuned":false,"charges":"0","chargeType":"c1","destroy":false,"destroyFlavorText":"reaches 0 charges: it crumbles into ashes and is destroyed.","rechargeable":false,"recharge":"0","rechargeType":"t1","rechargeUnit":"r1","sorting":"l"},"itemacro":{"macro":{"data":{"_id":null,"name":"Maneuvers: Precision Attack","type":"script","author":"ldRsJ6Yp5qPydWA1","img":"icons/svg/dice-target.svg","scope":"global","command":"/*****\nFighter Battlemaster Maneuver: Precision Attack\n\nUSEAGE : PLACE HOLDER\nThis item should be placed on the character that has the Precision Attack Manuever.  \nThis items places an effect on the Actor that allows the rolling of a Superiority Die to \nbe added to the attack Roll before the TO HIT is evaluated.\n\nv1.2 May 7 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \n*****/\nconst workflow = MidiQOL.Workflow.getWorkflow(args[0].uuid);\n\nif (args[0].macroPass === \"preCheckHits\") {\n    const theItem = workflow;\n\n    if ((theItem != null) && (theItem.name != \"Maneuvers: Precision Attack\")) {\n        // define Actor, Target and Item\n        const pcActor = MidiQOL.MQfromActorUuid(args[0].actorUuid);\n\n        // Find Superiority Dice Resource\n        let resource = await findSheetResource(pcActor, \"Superiority Dice\");\n        if (!resource) {\n            ui.notifications.error(\"Could not find a recource labeled 'Superiority Dice'...\");\n            return;\n        }\n\n        // No more Superiority Dice\n        let superiorityDice = resource.value;\n        if (superiorityDice < 1) return;\n\n        // check to make sure only one target is selected\n        if ((args[0].targetUuids.length < 1) || (args[0].targetUuids.length > 1)) {\n            ui.notifications.error(\"You need to select a single target.\");\n            return;\n        }\n\n        let superiorityDie = pcActor.getFlag(\"dae\", \"SuperiorityDie\");\n        if (superiorityDie === null) {\n            ui.notifications.error(\"You are not a fighter battle master of at least 3rd level!\");\n            return;\n        }\n\n        // make sure the attempted hit was made with a weapon attack\n        if (![\"mwak\", \"rwak\"].includes(args[0].item.data.actionType)) {\n            ui.notifications.error(\"Precision Attack only works with a weapon attack\");\n            return;\n        }\n\n        // create a dialog and prompt to spend a superiority die\n        let useSuperiorityDie = false;\n        if (superiorityDice > 0) {\n            let dialog = new Promise((resolve, reject) => {\n                new Dialog({\n                    // localize this text\n                    title: \"Battle Master: Precision Attack\",\n                    content: \"<p>Use Precision Attack (cost 1 Superiority Die)?</p>\",\n                    buttons: {\n                        one: {\n                            icon: '<p> </p><img src = \"icons/skills/targeting/crosshair-triple-strike-orange.webp\" width=\"60\" height=\"60\"></>',\n                            label: \"<p>Yes</p>\",\n                            callback: () => resolve(true)\n                        },\n                        two: {\n                            icon: '<p> </p><img src = \"systems/dnd5e/icons/skills/weapon_28.jpg\" width=\"60\" height=\"60\"></>',\n                            label: \"<p>No</p>\",\n                            callback: () => { resolve(false) }\n                        }\n                    },\n                    default: \"two\"\n                }).render(true);\n            });\n            useSuperiorityDie = await dialog;\n        } else return;\n\n        if (!useSuperiorityDie) return;\n\n        // if YES subtract a superiorty die\n        await decrimentSheetResource(pcActor, \"Superiority Dice\", 1);\n\n        // get the live MIDI-QOL workflow so we can make changes\n        let newRoll = new Roll(`${workflow.attackRoll.result} + ${superiorityDie}`, workflow.actor.getRollData());\n        newRoll = await newRoll.evaluate({ async: true });\n        workflow.attackRoll = newRoll;\n        workflow.attackRollTotal = newRoll.total;\n        workflow.attackRollHTML = await workflow.attackRoll.render(newRoll);\n\n        return;\n    }\n}\nreturn;\n\n//---------------------------------- MY FUNCTIONS -------------------------------------\n\n// Test for available resource\n// Return resource object\nasync function findSheetResource(testActor, resourceName) {\n    let resources = Object.values(testActor.data.data.resources);\n    let foundResource = resources.find(i => i.label.toLowerCase() === resourceName.toLowerCase());\n    return foundResource;\n}\n\n// Decriment available resource\nasync function decrimentSheetResource(testActor, resourceName, numValue) {\n    let actorDup = duplicate(testActor);\n    let resources = Object.values(actorDup.data.resources);\n    let foundResource = resources.find(i => i.label.toLowerCase() === resourceName.toLowerCase());\n    foundResource.value = foundResource.value - numValue;\n    await testActor.update(actorDup);\n    return;\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}},"name":"Maneuvers: Precision Attack","type":"script","scope":"global","command":"/*****\nFighter Battlemaster Maneuver: Precision Attack\n\nUSEAGE : PLACE HOLDER\nThis item should be placed on the character that has the Precision Attack Manuever.  \nThis items places an effect on the Actor that allows the rolling of a Superiority Die to \nbe added to the attack Roll before the TO HIT is evaluated.\n\nv1.2 May 7 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \n*****/\nconst workflow = MidiQOL.Workflow.getWorkflow(args[0].uuid);\n\nif (args[0].macroPass === \"preCheckHits\") {\n    const theItem = workflow;\n\n    if ((theItem != null) && (theItem.name != \"Maneuvers: Precision Attack\")) {\n        // define Actor, Target and Item\n        const pcActor = MidiQOL.MQfromActorUuid(args[0].actorUuid);\n\n        // Find Superiority Dice Resource\n        let resource = await findSheetResource(pcActor, \"Superiority Dice\");\n        if (!resource) {\n            ui.notifications.error(\"Could not find a recource labeled 'Superiority Dice'...\");\n            return;\n        }\n\n        // No more Superiority Dice\n        let superiorityDice = resource.value;\n        if (superiorityDice < 1) return;\n\n        // check to make sure only one target is selected\n        if ((args[0].targetUuids.length < 1) || (args[0].targetUuids.length > 1)) {\n            ui.notifications.error(\"You need to select a single target.\");\n            return;\n        }\n\n        let superiorityDie = pcActor.getFlag(\"dae\", \"SuperiorityDie\");\n        if (superiorityDie === null) {\n            ui.notifications.error(\"You are not a fighter battle master of at least 3rd level!\");\n            return;\n        }\n\n        // make sure the attempted hit was made with a weapon attack\n        if (![\"mwak\", \"rwak\"].includes(args[0].item.data.actionType)) {\n            ui.notifications.error(\"Precision Attack only works with a weapon attack\");\n            return;\n        }\n\n        // create a dialog and prompt to spend a superiority die\n        let useSuperiorityDie = false;\n        if (superiorityDice > 0) {\n            let dialog = new Promise((resolve, reject) => {\n                new Dialog({\n                    // localize this text\n                    title: \"Battle Master: Precision Attack\",\n                    content: \"<p>Use Precision Attack (cost 1 Superiority Die)?</p>\",\n                    buttons: {\n                        one: {\n                            icon: '<p> </p><img src = \"icons/skills/targeting/crosshair-triple-strike-orange.webp\" width=\"60\" height=\"60\"></>',\n                            label: \"<p>Yes</p>\",\n                            callback: () => resolve(true)\n                        },\n                        two: {\n                            icon: '<p> </p><img src = \"icons/skills/social/wave-halt-stop.webp\" width=\"60\" height=\"60\"></>',\n                            label: \"<p>No</p>\",\n                            callback: () => { resolve(false) }\n                        }\n                    },\n                    default: \"two\"\n                }).render(true);\n            });\n            useSuperiorityDie = await dialog;\n        } else return;\n\n        if (!useSuperiorityDie) return;\n\n        // if YES subtract a superiorty die\n        await decrimentSheetResource(pcActor, \"Superiority Dice\", 1);\n\n        //roll the superiority Die and show the player the result\n        const superiorityDieRoll = await(new Roll(`${superiorityDie}`)).roll({ async: true });\n        let chatOptions = {\n            type: CONST.CHAT_MESSAGE_TYPES.ROLL,\n            rolls: [superiorityDieRoll],\n            rollMode: game.settings.get(\"core\", \"rollMode\"),\n            content: 'My HTML Content'\n            };\n            ChatMessage.create(chatOptions);\n        console.log(superiorityDieRoll);\n\n        // get the live MIDI-QOL workflow so we can make changes\n        let newRoll = new Roll(`${workflow.attackRoll.result} + ${superiorityDieRoll.total}`, workflow.actor.getRollData());\n        newRoll = await newRoll.evaluate({ async: true });\n        workflow.attackRoll = newRoll;\n        workflow.attackRollTotal = newRoll.total;\n        workflow.attackRollHTML = await workflow.attackRoll.render(newRoll);\n\n\n        return;\n    }\n}\nreturn;\n\n//---------------------------------- MY FUNCTIONS -------------------------------------\n\n// Test for available resource\n// Return resource object\nasync function findSheetResource(testActor, resourceName) {\n    let resources = Object.values(testActor.system.resources);\n    let foundResource = resources.find(i => i.label.toLowerCase() === resourceName.toLowerCase());\n    return foundResource;\n}\n\n// Decriment available resource\nasync function decrimentSheetResource(testActor, resourceName, numValue) {\n    let actorDup = testActor.toObject();\n    let resources = Object.values(actorDup.system.resources);\n    let foundResource = resources.find(i => i.label.toLowerCase() === resourceName.toLowerCase());\n    foundResource.value = foundResource.value - numValue;\n    await testActor.update(actorDup);\n    return;\n}","author":"P5SMTbn5XK4Pt7QJ","_id":null,"img":"icons/svg/dice-target.svg","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}},"core":{"sourceId":"Item.agdqkK2J5m95X9ww"},"favtab":{"isFavorite":true},"cf":{"id":"temp_fgyhz98iq6m","path":"DDB Override#/CF_SEP/Battlemaster Maneuvers","color":"#000000"},"exportSource":{"world":"test","system":"dnd5e","coreVersion":"9.269","systemVersion":"1.6.1"}},"system":{"description":{"value":"<p>[PLACE YOUR DESCRIPTION HERE]</p>\n<p> </p>\n<details>\n<summary><strong>USAGE: </strong> <span style=\"color:#169179\">AUTOMATED</span></summary>\n<p>This item should be placed on the character that has the Precision Attack Maneuver.  This item places an effect on the Actor that allows the rolling of a Superiority Die to be added to the attack Roll before the TO HIT is evaluated.</p>\n</details>\n<p> </p>\n<details>\n<summary><strong>VERSION INFO</strong></summary>\n<p>v1.2 May 7 2022</p>\n<p>jbowens #0415 (Discord)</p>\n<p>https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git</p>\n</details>","chat":"","unidentified":""},"source":"PHB p74","activation":{"type":"special","cost":1,"condition":""},"duration":{"value":null,"units":""},"target":{"value":null,"width":null,"units":"","type":"self"},"range":{"value":null,"long":null,"units":""},"uses":{"value":null,"max":"","per":"","recovery":""},"consume":{"type":"attribute","target":"","amount":1},"ability":"","actionType":"other","attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"requirements":"Fighter: Battlemaster","recharge":{"value":null,"charged":false},"attunement":0},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1668878845050,"modifiedTime":1668963336459,"lastModifiedBy":"P5SMTbn5XK4Pt7QJ"},"folder":null,"sort":0,"ownership":{"default":0,"P5SMTbn5XK4Pt7QJ":3},"_id":"IlxviJxJp7hEaosI"}
{"name":"Maneuvers: Distracting Strike","type":"feat","img":"icons/skills/melee/blade-tip-chipped-blood-red.webp","effects":[{"_id":"z6c1xhx4agrwbd3z","changes":[{"key":"flags.midi-qol.grants.advantage.attack.all","mode":5,"value":"1","priority":20}],"disabled":false,"duration":{"startTime":null,"turns":null,"seconds":null,"combat":null,"rounds":1,"startRound":null,"startTurn":null},"icon":"icons/skills/melee/blade-tip-chipped-blood-red.webp","label":"Maneuvers: Distracting Strike","origin":"Actor.67GUmdTadYmGXD8W.Item.uIJSbACjp9yNcSdf","transfer":false,"flags":{"core":{"statusId":"Convenient Effect: Advantage"},"dae":{"stackable":"none","durationExpression":"","macroRepeat":"none","specialDuration":["isAttacked","turnStartSource"],"transfer":false,"selfTarget":false,"selfTargetAlways":false},"ActiveAuras":{"isAura":false,"aura":"None","radius":null,"alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"displayTemp":false,"hostile":false,"onlyOnce":false}},"tint":null}],"flags":{"ddbimporter":{"id":"53570","entityTypeId":"222216831","componentId":22,"componentTypeId":258900837,"class":"Fighter","subclass":"Battle Master","importId":"ye6nz9f4x9n3v7lu","ignoreIcon":true,"ignoreItemImport":true,"retainResourceConsumption":true},"infusions":{"infused":false},"obsidian":{"source":{"type":"class","text":"Fighter"}},"spellTemplateManager":{"stmData":{"ignoreDuration":false,"spellTexture":"","useTexture":false,"alpha":50,"coneOrigin":1,"loopAnimations":true}},"midi-qol":{"effectActivation":false,"onUseMacroName":""},"midiProperties":{"nodam":false,"halfdam":false,"fulldam":false,"rollOther":false,"critOther":false,"concentration":false,"magicdam":false,"magiceffect":false,"toggleEffect":false,"ignoreTotalCover":false},"magicitems":{"enabled":false,"equipped":false,"attuned":false,"charges":"0","chargeType":"c1","destroy":false,"destroyFlavorText":"reaches 0 charges: it crumbles into ashes and is destroyed.","rechargeable":false,"recharge":"0","rechargeType":"t1","rechargeUnit":"r1","sorting":"l"},"itemacro":{"macro":{"data":{"_id":null,"name":"Maneuvers: Trip Attack","type":"script","author":"ldRsJ6Yp5qPydWA1","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0},"flags":{}}}},"favtab":{"isFavorite":true},"scene-packer":{"hash":"6b7080f0d3a687b39d68d0632f0380d6cacd05ad","sourceId":"Item.sc5t97Kfw1ImQQ81"},"core":{"sourceId":"Item.bpSu08y0CydFPHEi"},"cf":{"id":"temp_fgyhz98iq6m","path":"DDB Override#/CF_SEP/Battlemaster Maneuvers","color":"#000000"},"exportSource":{"world":"test","system":"dnd5e","coreVersion":"9.269","systemVersion":"1.6.1"}},"system":{"description":{"value":"<p>[PLACE YOUR DESCRIPTION HERE]</p>\n<p> </p>\n<details>\n<summary><strong>USAGE: </strong><span style=\"color:#169179\">ACTIVATE AFTER THE ATTACK</span></summary>\n<p>This Maneuver must be activated AFTER the character makes an attack and knows that a HIT was successful.  This will activate any bonuses, saves, effects, and extra damage to the TARGET.  A <span style=\"text-decoration:underline;color:#236fa1\">Superiority Die </span>will be expended immediately.</p>\n</details>\n<p> </p>\n<details>\n<summary><strong>SETUP:</strong></summary>\n<p>Please remember to link the use of this ability to a character sheet resource under the item details Resource Consumption dropdown.</p>\n<img src=\"https://user-images.githubusercontent.com/76136571/161775726-fb67bb97-5fd1-45c5-8301-bbb17e2d0f1d.png\" width=\"569\" /></details>\n<p> </p>\n<details>\n<summary><strong>VERSION INFO</strong></summary>\n<p>v1.2 May 7 2022</p>\n<p>jbowens #0415 (Discord)</p>\n<p>https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git</p>\n</details>","chat":"","unidentified":""},"source":"PHB p74","activation":{"type":"special","cost":null,"condition":""},"duration":{"value":null,"units":"inst"},"target":{"value":1,"width":null,"units":"","type":"creature"},"range":{"value":null,"long":null,"units":""},"uses":{"value":null,"max":"","per":"","recovery":""},"consume":{"type":"attribute","target":"resources.primary.value","amount":1},"ability":"","actionType":"util","attackBonus":"0","chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[["0 + @flags.dae.SuperiorityDie[Superiority]",""]],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"str"},"requirements":"Fighter: Battlemaster","recharge":{"value":null,"charged":false},"attunement":0},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1668945286713,"modifiedTime":1668963356421,"lastModifiedBy":"P5SMTbn5XK4Pt7QJ"},"folder":null,"sort":0,"ownership":{"default":0,"P5SMTbn5XK4Pt7QJ":3},"_id":"eCnmTMQzPGRkLtEI"}
{"name":"Superiority Die","type":"feat","img":"icons/sundries/gaming/dice-runed-brown.webp","effects":[{"_id":"UgB9349LhJU4nKsd","changes":[{"key":"macro.itemMacro","mode":0,"value":"","priority":20}],"disabled":false,"duration":{"startTime":null,"startRound":121,"startTurn":3,"seconds":null,"combat":null,"rounds":null,"turns":null},"icon":"icons/sundries/gaming/dice-runed-brown.webp","label":"Superiority Die","origin":"Item.H14LgNk3j1O3e3FV","transfer":true,"flags":{"core":{"statusId":""},"dae":{"stackable":"none","durationExpression":"","macroRepeat":"none","specialDuration":[],"transfer":true,"selfTarget":false,"selfTargetAlways":false},"ActiveAuras":{"isAura":false,"aura":"None","radius":null,"alignment":"","type":"","ignoreSelf":false,"height":false,"hidden":false,"displayTemp":false,"hostile":false,"onlyOnce":false},"dnd5e-helpers":{"rest-effect":"Ignore"}},"tint":null}],"flags":{"ddbimporter":{"id":"1023","entityTypeId":"222216831","componentId":209,"componentTypeId":12168134,"class":"Fighter","subclass":"Battle Master","dndbeyond":{"levelScale":{"id":12,"level":7,"description":"d8","dice":{"diceCount":5,"diceValue":8,"diceMultiplier":null,"fixedValue":null,"diceString":"5d8"},"fixedValue":null},"levelScales":[{"id":11,"level":1,"description":"d8","dice":{"diceCount":4,"diceValue":8,"diceMultiplier":null,"fixedValue":null,"diceString":"4d8"},"fixedValue":null},{"id":12,"level":7,"description":"d8","dice":{"diceCount":5,"diceValue":8,"diceMultiplier":null,"fixedValue":null,"diceString":"5d8"},"fixedValue":null},{"id":13,"level":10,"description":"d10","dice":{"diceCount":5,"diceValue":10,"diceMultiplier":null,"fixedValue":null,"diceString":"5d10"},"fixedValue":null},{"id":14,"level":15,"description":"d10","dice":{"diceCount":6,"diceValue":10,"diceMultiplier":null,"fixedValue":null,"diceString":"6d10"},"fixedValue":null},{"id":15,"level":18,"description":"d12","dice":{"diceCount":6,"diceValue":12,"diceMultiplier":null,"fixedValue":null,"diceString":"6d12"},"fixedValue":null}],"limitedUse":[{"level":null,"uses":1}]},"importId":"ye6nz9f4x9n3v7lu","ignoreIcon":true,"ignoreItemImport":true,"retainResourceConsumption":true},"infusions":{"infused":false},"obsidian":{"source":{"type":"class","text":"Fighter"}},"spellTemplateManager":{"stmData":{"ignoreDuration":false,"spellTexture":"","useTexture":false,"alpha":50,"coneOrigin":1,"loopAnimations":true}},"midi-qol":{"effectActivation":false,"onUseMacroName":""},"midiProperties":{"nodam":false,"halfdam":false,"fulldam":false,"rollOther":false,"critOther":false,"concentration":false,"magicdam":false,"magiceffect":false,"toggleEffect":false,"ignoreTotalCover":false},"magicitems":{"enabled":false,"equipped":false,"attuned":false,"charges":"0","chargeType":"c1","destroy":false,"destroyFlavorText":"reaches 0 charges: it crumbles into ashes and is destroyed.","rechargeable":false,"recharge":"0","rechargeType":"t1","rechargeUnit":"r1","sorting":"l"},"scene-packer":{"hash":"a87762384522f590736ad8d73ac8e7404a2bca2a","sourceId":"Item.vHao9Rby7ILSUA0z"},"core":{"sourceId":"Item.8gdA6c8j5GnkX33K"},"itemacro":{"macro":{"data":{"_id":null,"name":"Superiority Die","type":"script","author":"ldRsJ6Yp5qPydWA1","img":"icons/svg/dice-target.svg","scope":"global","command":"/*****\nFighter Battlemaster : Superiority Die\n\nUSEAGE : PASSIVE\nThis item must be on the character for Manuevers to function.  \nIt does not do anything directly but is a helper effect to determine the Battle Master Hit Die (d8, d10, d12) based on level.\n \nv1.3 August 6 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \n*****/\n\nif (args[0] === \"on\") {\n    const pcActor = await fromUuid(args[args.length - 1].actorUuid);\n    console.log(\"MACRO TEST | PC Actor: %O\", pcActor);\n\n    // Test Class\n    let pcFighter = pcActor.getRollData().classes?.fighter;\n    if (pcFighter === null) {\n        ui.notifications.error(\"You are not a Fighter!\");\n        return;\n    }\n\n    // Test Subclass\n    let pcFighterSubclass = pcActor.getRollData().classes.fighter?.subclass.identifier;\n    if (pcFighterSubclass != \"battle-master\") {\n        ui.notifications.error(\"You are not a Fighter Battlemaster!\");\n        return;\n    }\n\n    //const roll = await(new Roll(`2d8 + ${pcPaladin.levels}`)).roll();\n    let fighterLevel = pcFighter.levels;\n    console.log(\"MACRO TEST | Fighter Levels: %s\", fighterLevel);\n\n    let flagData;\n    if (fighterLevel > 17) flagData = \"+ 1d12\";\n    else if (fighterLevel > 9) flagData = \"+ 1d10\";\n    else if (fighterLevel > 0) flagData = \"+ 1d8\";\n    pcActor.setFlag(\"dae\", \"SuperiorityDie\", flagData)\n\n} else if (args[0] === \"off\") {\n    const pcActor = await fromUuid(args[args.length - 1].actorUuid);\n    pcActor.unsetFlag(\"dae\", \"SuperiorityDie\");\n}","folder":null,"sort":0,"permission":{"default":0},"flags":{}},"name":"Superiority Die","type":"script","scope":"global","command":"/*****\nFighter Battlemaster : Superiority Die\n\nUSEAGE : PASSIVE\nThis item must be on the character for Manuevers to function.  \nIt does not do anything directly but is a helper effect to determine the Battle Master Hit Die (d8, d10, d12) based on level.\n \nv1.3 August 6 2022 jbowens #0415 (Discord) https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git \n*****/\n\nif (args[0] === \"on\") {\n    const pcActor = await fromUuid(args[args.length - 1].actorUuid);\n    console.log(\"MACRO TEST | PC Actor: %O\", pcActor);\n\n    // Test Class\n    let pcFighter = pcActor.getRollData().classes?.fighter;\n    if (pcFighter === null) {\n        ui.notifications.error(\"You are not a Fighter!\");\n        return;\n    }\n\n    // Test Subclass\n    let pcFighterSubclass = pcActor.getRollData().classes.fighter?.subclass.identifier;\n    if (pcFighterSubclass != \"battle-master\") {\n        ui.notifications.error(\"You are not a Fighter Battlemaster!\");\n        return;\n    }\n\n    //const roll = await(new Roll(`2d8 + ${pcPaladin.levels}`)).roll();\n    let fighterLevel = pcFighter.levels;\n    console.log(\"MACRO TEST | Fighter Levels: %s\", fighterLevel);\n\n    let flagData;\n    if (fighterLevel > 17) flagData = \"+ 1d12\";\n    else if (fighterLevel > 9) flagData = \"+ 1d10\";\n    else if (fighterLevel > 0) flagData = \"+ 1d8\";\n    pcActor.setFlag(\"dae\", \"SuperiorityDie\", flagData)\n    //let superiorityDie = pcActor.getFlag(\"dae\", \"SuperiorityDie\");\n    //console.log(\"------------------------------------------------------------------------\");\n    //console.log(superiorityDie);\n\t\n\tconsole.log(\"Flag data\" + flagData);\n\n} else if (args[0] === \"off\") {\n    const pcActor = await fromUuid(args[args.length - 1].actorUuid);\n    pcActor.unsetFlag(\"dae\", \"SuperiorityDie\");\n}","author":"P5SMTbn5XK4Pt7QJ","_id":null,"img":"icons/svg/dice-target.svg","folder":null,"sort":0,"ownership":{"default":0},"flags":{},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}},"exportSource":{"world":"test","system":"dnd5e","coreVersion":"9.269","systemVersion":"1.6.3"},"favtab":{"isFavorite":true},"cf":{"id":"temp_fgyhz98iq6m","path":"DDB Override#/CF_SEP/Battlemaster Maneuvers","color":"#000000"}},"system":{"description":{"value":"<p>[PLACE YOUR DESCRIPTION HERE]</p>\n<p> </p>\n<details>\n<summary><strong>USAGE: </strong> <span style=\"color:#169179\">PASSIVE</span></summary>\n<p>This item must be on the character for Manuevers to function.  It does not do anything directly but is a helper effect to determine the Battle Master Hit Die (d8, d10, d12) based on level.</p>\n</details>\n<p> </p>\n<details>\n<summary><strong>VERSION INFO</strong></summary>\n<p>v1.2 May 7 2022</p>\n<p>jbowens #0415 (Discord)</p>\n<p>https://github.com/jbowensii/More-Automated-Spells-Items-and-Feats.git</p>\n</details>","chat":"","unidentified":""},"source":"PHB p74","activation":{"type":"","cost":0,"condition":""},"duration":{"value":null,"units":""},"target":{"value":null,"width":null,"units":"","type":""},"range":{"value":null,"long":null,"units":""},"uses":{"value":0,"max":"","per":"","recovery":""},"consume":{"type":"","target":"","amount":null},"ability":"","actionType":"other","attackBonus":0,"chatFlavor":"","critical":{"threshold":null,"damage":""},"damage":{"parts":[],"versatile":""},"formula":"","save":{"ability":"","dc":null,"scaling":"spell"},"requirements":"Fighter: Battlemaster","recharge":{"value":null,"charged":false},"attunement":0},"_stats":{"systemId":"dnd5e","systemVersion":"2.0.3","coreVersion":"10.290","createdTime":1668886669346,"modifiedTime":1668963354167,"lastModifiedBy":"P5SMTbn5XK4Pt7QJ"},"folder":null,"sort":0,"ownership":{"default":0,"P5SMTbn5XK4Pt7QJ":3},"_id":"i6kywYl1aAtxmG0E"}
